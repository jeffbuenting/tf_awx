#cloud-config
password: asdfqwer
chpasswd: { expire: False }
ssh_pwauth: True

hostname: ${vmname}
fqdn: ${vmname}

# Upgrade the instance on first boot
package_update: true
package_upgrade: true

users:
  - default
  - name: "${adminuser}"
    # plain_text_passwd: ${adminpassword}
    # this is the password hash generated by mkpasswd --method=SHA-512 --rounds=4096
    passwd: "${adminpassword}"
    sudo: ALL=(ALL) ALL
    groups: users, sudo
    lock_passwd: false
    ssh_authorized_keys:
      - ${ssh_rsa_key}
  - name: "svc.ansible"
    passwd: "${adminpassword}"
    sudo: ALL=(ALL) ALL
    groups: users, sudo
    lock_passwd: false
    ssh_authorized_keys:
      - ${ssh_rsa_key}

# packages:

write_files:
  - path: /awx/kustomization.yml
    content: | 
      ${kustomization_file}
    permissions: "0777"
    encoding: base64
  - path: /awx/awx.yml
    content: | 
      ${awx_yml}
    permissions: "0777"
    encoding: base64

runcmd:
  # install qemu agent
  - apt update && apt -y install qemu-guest-agent
  - systemctl enable qemu-guest-agent
  - systemctl start qemu-guest-agent

# -----------------------------------------------
# AWX on k3s
# https://medium.com/@achatterjee.82/how-to-install-awx-on-ubuntu-linux-8970210cf037
  # download and install k3s
  - curl -sfL https://get.k3s.io | sh -

  # Initiate the build process
  - sudo kubectl kustomize /awx | kubectl apply -f -

  # add they awx.yml and deploy
  - sudo sed -i '6i \ \ - awx.yml' /awx/kustomization.yml
  - sudo kubectl kustomize /awx | kubectl apply -f -

  # pause for x seconds to allow the services to start
  - sleep 300s

  # port forward to allow access from outside node
  - sudo kubectl port-forward service/awx-service -n awx --address 0.0.0.0 10445:80



# -----------------------------------------------
# AWX on Docker
# https://medium.com/@sahildrive007/easily-install-ansible-awx-on-ubuntu-a-step-by-step-guide-b391c783d54c
  # # Check for updates
  # - sudo apt update -y
  # - sudo apt upgrade -y

  # #  Install Ansible and Required Packages
  # - sudo apt install python-setuptools -y
  # - sudo apt install python3-pip -y
  # - sudo pip3 install ansible
  # - ansible --version
  # - pip3 install docker==6.1.3
  # - sudo pip3 install docker-compose
  # - docker-compose version

  # # Grant Docker Access to the Current User
  # - sudo usermod -aG docker $USER

  # #  Install Required Packages for AWX Setup
  # - sudo apt install git vim pwgen -y

  # # Clone the Ansible AWX Repository
  # - sudo git clone https://github.com/ansible/awx.git --branch 17.0.1 --depth 1




# -----------------------------------------------
# AWX on Minikube - seems to cause CPU issuses on proxmox so trying something else
  # # install Docker - https://linuxtechi.com/install-docker-on-ubuntu-24-04
  # - sudo apt install ca-certificates curl -y
  # - sudo install -m 0755 -d /etc/apt/keyrings
  # - sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
  # - sudo chmod a+r /etc/apt/keyrings/docker.asc
  # - sudo echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  # - sudo apt update
  # - sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin -y
  # - sudo usermod -aG docker $USER
  # - newgrep docker
  # - docker --version

  # # Install minikub - https://linuxtechi.com/install-minikube-on-ubuntu
  # - sudo apt install -y curl wget apt-transport-https
  # - sudo curl -L -o /tmp/minikube-linux-amd64 https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
  # - sudo install /tmp/minikube-linux-amd64 /usr/local/bin/minikube
  # - sudo minikube version
  # - sudo curl -L -o /tmp/kubectl https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
  # - sudo chmod +x /tmp/kubectl
  # - sudo mv /tmp/kubectl /usr/local/bin
  # - sudo kubectl version -o yaml
  # # - minikube start --driver=docker
  # # - minikube start --driver=none

  # # install awx - https://linuxtechi.com/install-ansible-awx-on-ubuntu
  # - sudo apt install git make -y
  # - sudo minikube start --vm-driver=docker --addons=ingress --force
  # - sudo minikube status
  # - sudo kubectl get pods -A
  # # download awx operator
  # - mkdir /awx-operator
  # - sudo git clone https://github.com/ansible/awx-operator.git /awx-operator
  # - cd /awx-operator/
  # # - sudo git checkout $(git describe --tags)
  # - sudo git checkout 2.19.1
  # # set namespace and deply
  # # - export NAMESPACE=ansible-awx
  # # - export VERSION=2.4.0
  # # - make deploy
  # - sudo NAMESPACE=ansible-awx VERSION=2.19.1 make deploy
  # # - sudo kubectl get pods -n ansible-awx
  # # - sudo kubectl create -f /awx-operator/awx-demo.yml -n ansible-awx
  # # allow access from outside host 
  # # - sudo kubectl port-forward service/awx-demo-service -n ansible-awx --address 0.0.0.0 10445:80

